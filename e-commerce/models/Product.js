const mongoose = require('mongoose');
mongoose.Promise = global.Promise;
const slug = require('slugs');
const productSchema = new mongoose.Schema({
    name: {
        type: String,
        trim: true, // this normalizes names
        required: 'Please enter a product name!' //"name" is mandatory
    },
    slug: String, //this element will be autogenerated
    price: {
        type: String,
        trim: true
    },
    photo: String
});


// ********PRE-SAVE HOOK********* -
productSchema.pre('save', async function(next) {
    if (!this.isModified('name')) {
    next();
    return; //stop this function from running
    }
    this.slug = slug(this.name);
   
    const slugRegEx = new RegExp(`^(${this.slug})((-[0-9]*$)?)$`, 'i');
    const productWithSlug = await this.constructor.find({ slug: slugRegEx
   });
    if (productWithSlug.length) { //if slug exists -> increment
    this.slug = `${this.slug}-${productWithSlug.length+1}`;
    }
    next(); //follow the PIPELINE -> do the SAVE
   });

   //link “Store” with the storeSchema and make it importable

   // *********INDEXES**********
productSchema.index({
    name: 'text', //we will search in the name attribute
    price: 'text' //we will search in the desc. attribute
   });
 module.exports = mongoose.model('Product', productSchema);